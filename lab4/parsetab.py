
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '524B44DC383A59FE7D2506607806AA21'
    
_lr_action_items = {'=':([7,62,122,],[56,105,105,]),'FLOAT':([0,2,4,6,8,9,10,11,12,13,15,16,17,19,20,21,22,27,28,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,68,69,71,72,73,95,99,100,103,105,107,108,109,113,114,115,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,23,-26,-27,-6,-25,-5,-8,23,-23,-19,-2,-24,-4,-21,23,-22,23,-20,23,-18,23,23,23,23,23,23,23,23,23,-28,23,23,23,23,23,23,23,23,23,-10,23,23,23,23,-42,23,-41,-17,23,23,-31,23,-7,-9,23,-29,23,-30,-40,-16,23,-32,-43,23,23,23,23,-35,-33,-39,-38,-37,-76,23,23,-36,-34,]),'OR':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[34,-48,-46,-47,-49,-45,34,-48,34,34,-59,-50,-57,-64,-54,-66,-58,-56,-67,-62,-52,-51,-53,-65,-63,-61,-60,-55,34,-68,-69,34,-71,-70,34,34,]),'WHILE':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,31,33,43,53,55,57,64,69,71,72,95,99,100,103,107,109,113,114,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,32,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,32,-18,-28,-10,32,32,-42,-41,-17,32,-31,32,-7,-9,-29,-30,-40,-16,-32,-43,32,32,32,32,-35,-33,-39,-38,-37,-76,32,32,-36,-34,]),'error':([0,2,4,6,8,9,10,11,12,13,15,16,17,19,20,21,22,28,33,43,53,54,57,64,68,69,73,95,100,103,107,109,113,120,121,138,139,140,141,142,144,147,148,],[-3,5,-26,-27,-6,-25,-5,-8,59,-23,-19,-2,-24,-4,-21,67,-22,-20,-18,-28,-10,93,5,-42,111,-41,116,-31,-7,-9,-29,-30,-40,-32,-43,-35,-33,-39,-38,-37,-76,-36,-34,]),'ELSE':([4,6,9,13,15,17,20,22,28,33,43,64,69,95,107,109,113,120,121,138,139,140,141,142,147,148,],[-26,-27,-25,-23,-19,-24,-21,-22,-20,-18,-28,-42,-41,-31,-29,-30,-40,-32,-43,145,146,-39,-38,-37,-36,-34,]),'IF':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,31,33,43,53,55,57,64,69,71,72,95,99,100,103,107,109,113,114,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,24,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,24,-18,-28,-10,24,24,-42,-41,-17,24,-31,24,-7,-9,-29,-30,-40,-16,-32,-43,24,24,24,24,-35,-33,-39,-38,-37,-76,24,24,-36,-34,]),'>':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[37,-48,-46,-47,-49,-45,37,-48,37,37,37,-50,37,None,-54,None,37,37,None,None,-52,-51,-53,None,None,-61,-60,37,37,-68,-69,37,-71,-70,37,37,]),'%':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[38,-48,-46,-47,-49,-45,38,-48,38,38,38,38,38,38,-54,38,38,38,38,38,-52,38,-53,38,38,38,38,38,38,-68,-69,38,-71,-70,38,38,]),'STRING':([0,2,4,6,8,9,10,11,12,13,15,16,17,19,20,21,22,27,28,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,68,69,71,72,73,95,99,100,103,105,107,108,109,113,114,115,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,25,-26,-27,-6,-25,-5,-8,25,-23,-19,-2,-24,-4,-21,25,-22,25,-20,25,-18,25,25,25,25,25,25,25,25,25,-28,25,25,25,25,25,25,25,25,25,-10,25,25,25,25,-42,25,-41,-17,25,25,-31,25,-7,-9,25,-29,25,-30,-40,-16,25,-32,-43,25,25,25,25,-35,-33,-39,-38,-37,-76,25,25,-36,-34,]),'BREAK':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,31,33,43,53,55,57,64,69,71,72,95,99,100,103,107,109,113,114,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,18,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,18,-18,-28,-10,18,18,-42,-41,-17,18,-31,18,-7,-9,-29,-30,-40,-16,-32,-43,18,18,18,18,-35,-33,-39,-38,-37,-76,18,18,-36,-34,]),'AND':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[40,-48,-46,-47,-49,-45,40,-48,40,40,40,-50,-57,-64,-54,-66,-58,-56,-67,-62,-52,-51,-53,-65,-63,-61,-60,-55,40,-68,-69,40,-71,-70,40,40,]),'UNTIL':([4,6,9,13,15,17,20,22,28,33,43,64,69,71,72,95,107,109,113,114,120,121,138,139,140,141,142,147,148,],[-26,-27,-25,-23,-19,-24,-21,-22,-20,-18,-28,-42,-41,-17,115,-31,-29,-30,-40,-16,-32,-43,-35,-33,-39,-38,-37,-36,-34,]),'CONTINUE':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,31,33,43,53,55,57,64,69,71,72,95,99,100,103,107,109,113,114,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,26,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,26,-18,-28,-10,26,26,-42,-41,-17,26,-31,26,-7,-9,-29,-30,-40,-16,-32,-43,26,26,26,26,-35,-33,-39,-38,-37,-76,26,26,-36,-34,]),'RETURN':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,31,33,43,53,55,57,64,69,71,72,95,99,100,103,107,109,113,114,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,27,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,27,-18,-28,-10,27,27,-42,-41,-17,27,-31,27,-7,-9,-29,-30,-40,-16,-32,-43,27,27,27,27,-35,-33,-39,-38,-37,-76,27,27,-36,-34,]),'/':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[47,-48,-46,-47,-49,-45,47,-48,47,47,47,47,47,47,-54,47,47,47,47,47,-52,47,-53,47,47,47,47,47,47,-68,-69,47,-71,-70,47,47,]),'-':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[46,-48,-46,-47,-49,-45,46,-48,46,46,46,-50,46,46,-54,46,46,46,46,46,-52,-51,-53,46,46,46,46,46,46,-68,-69,46,-71,-70,46,46,]),'{':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,31,33,43,53,55,57,64,69,71,72,95,99,100,103,107,109,113,114,120,121,130,131,133,134,137,138,139,140,141,142,144,145,146,147,148,],[-3,11,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,11,-18,-28,-10,11,11,-42,-41,-17,11,-31,11,-7,-9,-29,-30,-40,-16,-32,-43,11,11,11,11,11,-35,-33,-39,-38,-37,-76,11,11,-36,-34,]),'ID':([0,2,4,6,8,9,10,11,12,13,14,15,16,17,19,20,21,22,27,28,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,68,69,71,72,73,95,98,99,100,103,104,105,107,108,109,113,114,115,120,121,126,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,7,-26,-27,-6,-25,-5,-8,60,-23,62,-19,-2,-24,-4,-21,60,-22,60,-20,7,-18,60,60,60,60,60,60,60,60,60,-28,60,60,60,60,60,60,60,60,60,-10,60,7,60,7,-42,60,-41,-17,7,60,-31,122,7,-7,-9,122,60,-29,60,-30,-40,-16,60,-32,-43,136,7,7,7,7,-35,-33,-39,-38,-37,-76,7,7,-36,-34,]),'NEQ':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[49,-48,-46,-47,-49,-45,49,-48,49,49,49,-50,49,None,-54,None,49,49,None,None,-52,-51,-53,None,None,-61,-60,49,49,-68,-69,49,-71,-70,49,49,]),'LE':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[39,-48,-46,-47,-49,-45,39,-48,39,39,39,-50,39,None,-54,None,39,39,None,None,-52,-51,-53,None,None,-61,-60,39,39,-68,-69,39,-71,-70,39,39,]),'(':([0,2,4,6,7,8,9,10,11,12,13,15,16,17,19,20,21,22,24,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,62,64,68,69,71,72,73,95,99,100,103,105,107,108,109,113,114,115,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,12,-26,-27,54,-6,-25,-5,-8,12,-23,-19,-2,-24,-4,-21,12,-22,68,12,-20,12,73,-18,12,12,12,12,12,12,12,12,12,-28,12,12,12,12,12,12,12,12,12,-10,12,12,12,12,54,106,-42,12,-41,-17,12,12,-31,12,-7,-9,12,-29,12,-30,-40,-16,12,-32,-43,12,12,12,12,-35,-33,-39,-38,-37,-76,12,12,-36,-34,]),'+':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[35,-48,-46,-47,-49,-45,35,-48,35,35,35,-50,35,35,-54,35,35,35,35,35,-52,-51,-53,35,35,35,35,35,35,-68,-69,35,-71,-70,35,35,]),'TYPE':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,33,43,53,57,64,69,95,100,103,106,107,109,113,120,121,135,138,139,140,141,142,144,147,148,],[-3,14,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,-18,-28,-10,98,-42,-41,-31,-7,-9,126,-29,-30,-40,-32,-43,126,-35,-33,-39,-38,-37,-76,-36,-34,]),'GE':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[42,-48,-46,-47,-49,-45,42,-48,42,42,42,-50,42,None,-54,None,42,42,None,None,-52,-51,-53,None,None,-61,-60,42,42,-68,-69,42,-71,-70,42,42,]),'^':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[36,-48,-46,-47,-49,-45,36,-48,36,36,36,-50,-57,-64,-54,-66,36,-56,-67,-62,-52,-51,-53,-65,-63,-61,-60,36,36,-68,-69,36,-71,-70,36,36,]),',':([23,25,29,30,60,61,63,65,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,101,102,118,119,123,124,125,127,129,136,143,],[-46,-47,-49,-45,-48,104,-12,-75,108,-59,-50,-57,-64,-54,-66,-58,-56,-67,-62,-52,-51,-53,-65,-63,-61,-60,-55,108,-68,-69,-71,-70,-11,-13,135,-80,-74,-81,-79,]),')':([23,25,29,30,54,58,59,60,65,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,102,106,110,111,112,116,117,118,119,125,127,128,129,136,143,],[-46,-47,-49,-45,-73,101,102,-48,-75,-59,-50,-57,-64,-54,-66,-58,-56,-67,-62,-52,-51,-53,-65,-63,-61,-60,-55,-72,118,119,-68,-69,-78,-44,130,131,133,134,-71,-70,-77,-80,137,-74,-81,-79,]),'INTEGER':([0,2,4,6,8,9,10,11,12,13,15,16,17,19,20,21,22,27,28,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,68,69,71,72,73,95,99,100,103,105,107,108,109,113,114,115,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,30,-26,-27,-6,-25,-5,-8,30,-23,-19,-2,-24,-4,-21,30,-22,30,-20,30,-18,30,30,30,30,30,30,30,30,30,-28,30,30,30,30,30,30,30,30,30,-10,30,30,30,30,-42,30,-41,-17,30,30,-31,30,-7,-9,30,-29,30,-30,-40,-16,30,-32,-43,30,30,30,30,-35,-33,-39,-38,-37,-76,30,30,-36,-34,]),':':([7,],[55,]),'SHR':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[50,-48,-46,-47,-49,-45,50,-48,50,50,50,-50,50,50,-54,50,50,50,50,50,-52,-51,-53,50,50,-61,-60,50,50,-68,-69,50,-71,-70,50,50,]),'&':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[41,-48,-46,-47,-49,-45,41,-48,41,41,41,-50,41,-64,-54,-66,41,-56,-67,-62,-52,-51,-53,-65,-63,-61,-60,41,41,-68,-69,41,-71,-70,41,41,]),'REPEAT':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,31,33,43,53,55,57,64,69,71,72,95,99,100,103,107,109,113,114,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,31,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,31,-18,-28,-10,31,31,-42,-41,-17,31,-31,31,-7,-9,-29,-30,-40,-16,-32,-43,31,31,31,31,-35,-33,-39,-38,-37,-76,31,31,-36,-34,]),'$end':([0,1,2,4,6,8,9,10,13,15,16,17,19,20,22,28,33,43,53,64,69,95,103,107,109,113,120,121,138,139,140,141,142,144,147,148,],[-3,0,-1,-26,-27,-6,-25,-5,-23,-19,-2,-24,-4,-21,-22,-20,-18,-28,-10,-42,-41,-31,-9,-29,-30,-40,-32,-43,-35,-33,-39,-38,-37,-76,-36,-34,]),';':([3,5,7,18,23,25,26,29,30,60,61,63,65,66,67,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,123,124,129,132,],[43,53,-48,64,-46,-47,69,-49,-45,-48,103,-12,-75,107,109,113,-59,-50,-57,-64,-54,-66,-58,-56,-67,-62,-52,-51,-53,-65,-63,-61,-60,-55,120,-68,-69,-44,-71,-70,-11,-13,-74,140,]),'SHL':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[51,-48,-46,-47,-49,-45,51,-48,51,51,51,-50,51,51,-54,51,51,51,51,51,-52,-51,-53,51,51,-61,-60,51,51,-68,-69,51,-71,-70,51,51,]),'*':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[45,-48,-46,-47,-49,-45,45,-48,45,45,45,45,45,45,-54,45,45,45,45,45,-52,45,-53,45,45,45,45,45,45,-68,-69,45,-71,-70,45,45,]),'}':([4,6,9,11,13,15,17,20,22,28,33,43,53,57,64,69,71,95,97,99,100,103,107,109,113,114,120,121,138,139,140,141,142,147,148,],[-26,-27,-25,-8,-23,-19,-24,-21,-22,-20,-18,-28,-10,-15,-42,-41,-17,-31,121,-14,-7,-9,-29,-30,-40,-16,-32,-43,-35,-33,-39,-38,-37,-36,-34,]),'PRINT':([0,2,4,6,8,9,10,11,13,15,16,17,19,20,22,28,31,33,43,53,55,57,64,69,71,72,95,99,100,103,107,109,113,114,120,121,130,131,133,134,138,139,140,141,142,144,145,146,147,148,],[-3,21,-26,-27,-6,-25,-5,-8,-23,-19,-2,-24,-4,-21,-22,-20,21,-18,-28,-10,21,21,-42,-41,-17,21,-31,21,-7,-9,-29,-30,-40,-16,-32,-43,21,21,21,21,-35,-33,-39,-38,-37,-76,21,21,-36,-34,]),'<':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[48,-48,-46,-47,-49,-45,48,-48,48,48,48,-50,48,None,-54,None,48,48,None,None,-52,-51,-53,None,None,-61,-60,48,48,-68,-69,48,-71,-70,48,48,]),'|':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[52,-48,-46,-47,-49,-45,52,-48,52,52,52,-50,-57,-64,-54,-66,52,-56,-67,-62,-52,-51,-53,-65,-63,-61,-60,-55,52,-68,-69,52,-71,-70,52,52,]),'EQ':([3,7,23,25,29,30,58,60,65,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,110,118,119,124,129,],[44,-48,-46,-47,-49,-45,44,-48,44,44,44,-50,44,None,-54,None,44,44,None,None,-52,-51,-53,None,None,-61,-60,44,44,-68,-69,44,-71,-70,44,44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'while_instr':([2,31,55,57,72,99,130,131,133,134,145,146,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'expression':([2,12,21,27,31,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,57,68,72,73,99,105,108,115,130,131,133,134,145,146,],[3,58,65,70,3,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,65,3,96,3,110,3,110,3,124,129,110,3,3,3,3,3,3,]),'expr_list':([21,54,],[66,92,]),'program':([0,],[1,]),'expr_list_or_empty':([54,],[94,]),'args_list_or_empty':([106,],[128,]),'declarations':([11,],[57,]),'condition':([68,73,115,],[112,117,132,]),'instruction':([2,31,55,57,72,99,130,131,133,134,145,146,],[8,71,95,71,114,114,138,139,141,142,147,148,]),'compound_instr':([2,31,55,57,72,99,130,131,133,134,137,145,146,],[6,6,6,6,6,6,6,6,6,6,144,6,6,]),'instructions_opt':([57,],[97,]),'fundef':([2,],[10,]),'break_instr':([2,31,55,57,72,99,130,131,133,134,145,146,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'arg':([106,135,],[127,143,]),'assignment':([2,31,55,57,72,99,130,131,133,134,145,146,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'choice_instr':([2,31,55,57,72,99,130,131,133,134,145,146,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'init':([14,98,104,],[63,63,123,]),'args_list':([106,],[125,]),'repeat_instr':([2,31,55,57,72,99,130,131,133,134,145,146,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'inits':([14,98,],[61,61,]),'elements':([0,],[2,]),'labeled_instr':([2,31,55,57,72,99,130,131,133,134,145,146,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'element':([2,],[16,]),'return_instr':([2,31,55,57,72,99,130,131,133,134,145,146,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'instructions':([31,57,],[72,99,]),'const':([2,12,21,27,31,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,57,68,72,73,99,105,108,115,130,131,133,134,145,146,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'continue_instr':([2,31,55,57,72,99,130,131,133,134,145,146,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'declaration':([2,57,],[19,100,]),'print_instr':([2,31,55,57,72,99,130,131,133,134,145,146,],[33,33,33,33,33,33,33,33,33,33,33,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> elements','program',1,'p_program','Cparser.py',49),
  ('elements -> elements element','elements',2,'p_elements','Cparser.py',57),
  ('elements -> <empty>','elements',0,'p_elements','Cparser.py',58),
  ('element -> declaration','element',1,'p_element','Cparser.py',72),
  ('element -> fundef','element',1,'p_element','Cparser.py',73),
  ('element -> instruction','element',1,'p_element','Cparser.py',74),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',80),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',81),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',94),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',95),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',102),
  ('inits -> init','inits',1,'p_inits','Cparser.py',103),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',117),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',124),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',125),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',134),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',135),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',150),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',151),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',152),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',153),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',154),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',155),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',156),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',157),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',158),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',159),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',160),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',166),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',167),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',173),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',179),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',185),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',186),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',187),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',188),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',199),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',200),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',207),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',214),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',220),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',226),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',232),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',239),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',245),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',246),
  ('const -> STRING','const',1,'p_const','Cparser.py',247),
  ('expression -> ID','expression',1,'p_expression_id','Cparser.py',258),
  ('expression -> const','expression',1,'p_expression','Cparser.py',262),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',263),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',264),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',265),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',266),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',267),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',268),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',269),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',270),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',271),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',272),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',273),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',274),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',275),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',276),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',277),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',278),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',279),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',280),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',281),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',282),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',283),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',284),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',298),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',299),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',308),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',309),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',324),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',330),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',331),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',339),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',340),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',353),
]
